// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: fission/v1/help_code.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetActivityInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActivityInfoRequest) Reset() {
	*x = GetActivityInfoRequest{}
	mi := &file_fission_v1_help_code_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityInfoRequest) ProtoMessage() {}

func (x *GetActivityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityInfoRequest.ProtoReflect.Descriptor instead.
func (*GetActivityInfoRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{0}
}

type GetActivityInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActivityInfoResponse) Reset() {
	*x = GetActivityInfoResponse{}
	mi := &file_fission_v1_help_code_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivityInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityInfoResponse) ProtoMessage() {}

func (x *GetActivityInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityInfoResponse.ProtoReflect.Descriptor instead.
func (*GetActivityInfoResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{1}
}

type PreheatHelpCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	CleanRedis    bool                   `protobuf:"varint,2,opt,name=cleanRedis,proto3" json:"cleanRedis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreheatHelpCodeRequest) Reset() {
	*x = PreheatHelpCodeRequest{}
	mi := &file_fission_v1_help_code_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreheatHelpCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreheatHelpCodeRequest) ProtoMessage() {}

func (x *PreheatHelpCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreheatHelpCodeRequest.ProtoReflect.Descriptor instead.
func (*PreheatHelpCodeRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{2}
}

func (x *PreheatHelpCodeRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PreheatHelpCodeRequest) GetCleanRedis() bool {
	if x != nil {
		return x.CleanRedis
	}
	return false
}

type PreheatHelpCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreheatHelpCodeResponse) Reset() {
	*x = PreheatHelpCodeResponse{}
	mi := &file_fission_v1_help_code_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreheatHelpCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreheatHelpCodeResponse) ProtoMessage() {}

func (x *PreheatHelpCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreheatHelpCodeResponse.ProtoReflect.Descriptor instead.
func (*PreheatHelpCodeResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{3}
}

type RepairHelpCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinId         int64                  `protobuf:"varint,1,opt,name=minId,proto3" json:"minId,omitempty"`
	MaxId         int64                  `protobuf:"varint,2,opt,name=maxId,proto3" json:"maxId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairHelpCodeRequest) Reset() {
	*x = RepairHelpCodeRequest{}
	mi := &file_fission_v1_help_code_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairHelpCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairHelpCodeRequest) ProtoMessage() {}

func (x *RepairHelpCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairHelpCodeRequest.ProtoReflect.Descriptor instead.
func (*RepairHelpCodeRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{4}
}

func (x *RepairHelpCodeRequest) GetMinId() int64 {
	if x != nil {
		return x.MinId
	}
	return 0
}

func (x *RepairHelpCodeRequest) GetMaxId() int64 {
	if x != nil {
		return x.MaxId
	}
	return 0
}

type RepairHelpCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairHelpCodeResponse) Reset() {
	*x = RepairHelpCodeResponse{}
	mi := &file_fission_v1_help_code_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairHelpCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairHelpCodeResponse) ProtoMessage() {}

func (x *RepairHelpCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairHelpCodeResponse.ProtoReflect.Descriptor instead.
func (*RepairHelpCodeResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{5}
}

type HCTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HCTestRequest) Reset() {
	*x = HCTestRequest{}
	mi := &file_fission_v1_help_code_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HCTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HCTestRequest) ProtoMessage() {}

func (x *HCTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HCTestRequest.ProtoReflect.Descriptor instead.
func (*HCTestRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{6}
}

type HCTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HCTestResponse) Reset() {
	*x = HCTestResponse{}
	mi := &file_fission_v1_help_code_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HCTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HCTestResponse) ProtoMessage() {}

func (x *HCTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_help_code_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HCTestResponse.ProtoReflect.Descriptor instead.
func (*HCTestResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_help_code_proto_rawDescGZIP(), []int{7}
}

var File_fission_v1_help_code_proto protoreflect.FileDescriptor

var file_fission_v1_help_code_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x6c,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e,
	0x0a, 0x16, 0x50, 0x72, 0x65, 0x68, 0x65, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x22, 0x19,
	0x0a, 0x17, 0x50, 0x72, 0x65, 0x68, 0x65, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x22, 0x18,
	0x0a, 0x16, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x43, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x43, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd8, 0x04, 0x0a, 0x08,
	0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x65,
	0x68, 0x65, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65,
	0x68, 0x65, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x68, 0x65, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x6d, 0x6c, 0x62, 0x62, 0x32, 0x35, 0x30, 0x33, 0x31, 0x6a, 0x6f, 0x62, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x2f, 0x70,
	0x72, 0x65, 0x48, 0x65, 0x61, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01,
	0x2a, 0x22, 0x2d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6c, 0x62, 0x62, 0x32,
	0x35, 0x30, 0x33, 0x31, 0x6a, 0x6f, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2f, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x12, 0x7a, 0x0a, 0x06, 0x48, 0x43, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x43, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x43, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12,
	0x2b, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6c, 0x62, 0x62, 0x32, 0x35, 0x30,
	0x33, 0x31, 0x6a, 0x6f, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x68,
	0x65, 0x6c, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x12, 0x97, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x25, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x6d, 0x6c, 0x62, 0x62, 0x32, 0x35, 0x30, 0x33, 0x31, 0x6a, 0x6f, 0x62, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x24, 0x5a, 0x22, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_fission_v1_help_code_proto_rawDescOnce sync.Once
	file_fission_v1_help_code_proto_rawDescData []byte
)

func file_fission_v1_help_code_proto_rawDescGZIP() []byte {
	file_fission_v1_help_code_proto_rawDescOnce.Do(func() {
		file_fission_v1_help_code_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fission_v1_help_code_proto_rawDesc), len(file_fission_v1_help_code_proto_rawDesc)))
	})
	return file_fission_v1_help_code_proto_rawDescData
}

var file_fission_v1_help_code_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_fission_v1_help_code_proto_goTypes = []any{
	(*GetActivityInfoRequest)(nil),  // 0: helloworld.v1.GetActivityInfoRequest
	(*GetActivityInfoResponse)(nil), // 1: helloworld.v1.GetActivityInfoResponse
	(*PreheatHelpCodeRequest)(nil),  // 2: helloworld.v1.PreheatHelpCodeRequest
	(*PreheatHelpCodeResponse)(nil), // 3: helloworld.v1.PreheatHelpCodeResponse
	(*RepairHelpCodeRequest)(nil),   // 4: helloworld.v1.RepairHelpCodeRequest
	(*RepairHelpCodeResponse)(nil),  // 5: helloworld.v1.RepairHelpCodeResponse
	(*HCTestRequest)(nil),           // 6: helloworld.v1.HCTestRequest
	(*HCTestResponse)(nil),          // 7: helloworld.v1.HCTestResponse
}
var file_fission_v1_help_code_proto_depIdxs = []int32{
	2, // 0: helloworld.v1.HelpCode.PreheatHelpCode:input_type -> helloworld.v1.PreheatHelpCodeRequest
	4, // 1: helloworld.v1.HelpCode.RepairHelpCode:input_type -> helloworld.v1.RepairHelpCodeRequest
	6, // 2: helloworld.v1.HelpCode.HCTest:input_type -> helloworld.v1.HCTestRequest
	0, // 3: helloworld.v1.HelpCode.GetActivityInfo:input_type -> helloworld.v1.GetActivityInfoRequest
	3, // 4: helloworld.v1.HelpCode.PreheatHelpCode:output_type -> helloworld.v1.PreheatHelpCodeResponse
	5, // 5: helloworld.v1.HelpCode.RepairHelpCode:output_type -> helloworld.v1.RepairHelpCodeResponse
	7, // 6: helloworld.v1.HelpCode.HCTest:output_type -> helloworld.v1.HCTestResponse
	1, // 7: helloworld.v1.HelpCode.GetActivityInfo:output_type -> helloworld.v1.GetActivityInfoResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fission_v1_help_code_proto_init() }
func file_fission_v1_help_code_proto_init() {
	if File_fission_v1_help_code_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fission_v1_help_code_proto_rawDesc), len(file_fission_v1_help_code_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fission_v1_help_code_proto_goTypes,
		DependencyIndexes: file_fission_v1_help_code_proto_depIdxs,
		MessageInfos:      file_fission_v1_help_code_proto_msgTypes,
	}.Build()
	File_fission_v1_help_code_proto = out.File
	file_fission_v1_help_code_proto_goTypes = nil
	file_fission_v1_help_code_proto_depIdxs = nil
}
