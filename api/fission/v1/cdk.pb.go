// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: fission/v1/cdk.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCDKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *GetCDKResponseData    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCDKResponse) Reset() {
	*x = GetCDKResponse{}
	mi := &file_fission_v1_cdk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCDKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDKResponse) ProtoMessage() {}

func (x *GetCDKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDKResponse.ProtoReflect.Descriptor instead.
func (*GetCDKResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{0}
}

func (x *GetCDKResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCDKResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCDKResponse) GetData() *GetCDKResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCDKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Param         string                 `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCDKRequest) Reset() {
	*x = GetCDKRequest{}
	mi := &file_fission_v1_cdk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCDKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDKRequest) ProtoMessage() {}

func (x *GetCDKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDKRequest.ProtoReflect.Descriptor instead.
func (*GetCDKRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{1}
}

func (x *GetCDKRequest) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type GetCDKResponseData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RallyCode     string                 `protobuf:"bytes,1,opt,name=rally_code,json=rallyCode,proto3" json:"rally_code,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Channel       string                 `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Generation    int32                  `protobuf:"varint,4,opt,name=generation,proto3" json:"generation,omitempty"`
	WaName        string                 `protobuf:"bytes,5,opt,name=wa_name,json=waName,proto3" json:"wa_name,omitempty"`
	Cdk           string                 `protobuf:"bytes,6,opt,name=cdk,proto3" json:"cdk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCDKResponseData) Reset() {
	*x = GetCDKResponseData{}
	mi := &file_fission_v1_cdk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCDKResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDKResponseData) ProtoMessage() {}

func (x *GetCDKResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDKResponseData.ProtoReflect.Descriptor instead.
func (*GetCDKResponseData) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{2}
}

func (x *GetCDKResponseData) GetRallyCode() string {
	if x != nil {
		return x.RallyCode
	}
	return ""
}

func (x *GetCDKResponseData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetCDKResponseData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetCDKResponseData) GetGeneration() int32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *GetCDKResponseData) GetWaName() string {
	if x != nil {
		return x.WaName
	}
	return ""
}

func (x *GetCDKResponseData) GetCdk() string {
	if x != nil {
		return x.Cdk
	}
	return ""
}

type ImportCDKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportCDKRequest) Reset() {
	*x = ImportCDKRequest{}
	mi := &file_fission_v1_cdk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportCDKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCDKRequest) ProtoMessage() {}

func (x *ImportCDKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCDKRequest.ProtoReflect.Descriptor instead.
func (*ImportCDKRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{3}
}

type ImportCDKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportCDKResponse) Reset() {
	*x = ImportCDKResponse{}
	mi := &file_fission_v1_cdk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportCDKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCDKResponse) ProtoMessage() {}

func (x *ImportCDKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCDKResponse.ProtoReflect.Descriptor instead.
func (*ImportCDKResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{4}
}

type CDKTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDKTestRequest) Reset() {
	*x = CDKTestRequest{}
	mi := &file_fission_v1_cdk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDKTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDKTestRequest) ProtoMessage() {}

func (x *CDKTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDKTestRequest.ProtoReflect.Descriptor instead.
func (*CDKTestRequest) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{5}
}

type CDKTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDKTestResponse) Reset() {
	*x = CDKTestResponse{}
	mi := &file_fission_v1_cdk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDKTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDKTestResponse) ProtoMessage() {}

func (x *CDKTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fission_v1_cdk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDKTestResponse.ProtoReflect.Descriptor instead.
func (*CDKTestResponse) Descriptor() ([]byte, []int) {
	return file_fission_v1_cdk_proto_rawDescGZIP(), []int{6}
}

var File_fission_v1_cdk_proto protoreflect.FileDescriptor

var file_fission_v1_cdk_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x64, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xb4, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6c, 0x6c, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x64, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x64, 0x6b, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x43,
	0x44, 0x4b, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a,
	0x0f, 0x43, 0x44, 0x4b, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xd4, 0x02, 0x0a, 0x03, 0x43, 0x44, 0x4b, 0x12, 0x71, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43,
	0x44, 0x4b, 0x12, 0x19, 0x2e, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x44, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x66, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44,
	0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6c,
	0x62, 0x62, 0x32, 0x35, 0x30, 0x33, 0x31, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x64, 0x6b, 0x12, 0x82, 0x01, 0x0a, 0x09,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4b, 0x12, 0x1c, 0x2e, 0x66, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01,
	0x2a, 0x22, 0x2d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6c, 0x62, 0x62, 0x32,
	0x35, 0x30, 0x33, 0x31, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x55, 0x0a, 0x07, 0x43, 0x44, 0x4b, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x66, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x44, 0x4b, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x44, 0x4b, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x63,
	0x64, 0x6b, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x42, 0x21, 0x5a, 0x1f, 0x66, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_fission_v1_cdk_proto_rawDescOnce sync.Once
	file_fission_v1_cdk_proto_rawDescData []byte
)

func file_fission_v1_cdk_proto_rawDescGZIP() []byte {
	file_fission_v1_cdk_proto_rawDescOnce.Do(func() {
		file_fission_v1_cdk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fission_v1_cdk_proto_rawDesc), len(file_fission_v1_cdk_proto_rawDesc)))
	})
	return file_fission_v1_cdk_proto_rawDescData
}

var file_fission_v1_cdk_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fission_v1_cdk_proto_goTypes = []any{
	(*GetCDKResponse)(nil),     // 0: fission.v1.GetCDKResponse
	(*GetCDKRequest)(nil),      // 1: fission.v1.GetCDKRequest
	(*GetCDKResponseData)(nil), // 2: fission.v1.GetCDKResponseData
	(*ImportCDKRequest)(nil),   // 3: fission.v1.ImportCDKRequest
	(*ImportCDKResponse)(nil),  // 4: fission.v1.ImportCDKResponse
	(*CDKTestRequest)(nil),     // 5: fission.v1.CDKTestRequest
	(*CDKTestResponse)(nil),    // 6: fission.v1.CDKTestResponse
}
var file_fission_v1_cdk_proto_depIdxs = []int32{
	2, // 0: fission.v1.GetCDKResponse.data:type_name -> fission.v1.GetCDKResponseData
	1, // 1: fission.v1.CDK.GetCDK:input_type -> fission.v1.GetCDKRequest
	3, // 2: fission.v1.CDK.ImportCDK:input_type -> fission.v1.ImportCDKRequest
	5, // 3: fission.v1.CDK.CDKTest:input_type -> fission.v1.CDKTestRequest
	0, // 4: fission.v1.CDK.GetCDK:output_type -> fission.v1.GetCDKResponse
	4, // 5: fission.v1.CDK.ImportCDK:output_type -> fission.v1.ImportCDKResponse
	6, // 6: fission.v1.CDK.CDKTest:output_type -> fission.v1.CDKTestResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fission_v1_cdk_proto_init() }
func file_fission_v1_cdk_proto_init() {
	if File_fission_v1_cdk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fission_v1_cdk_proto_rawDesc), len(file_fission_v1_cdk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fission_v1_cdk_proto_goTypes,
		DependencyIndexes: file_fission_v1_cdk_proto_depIdxs,
		MessageInfos:      file_fission_v1_cdk_proto_msgTypes,
	}.Build()
	File_fission_v1_cdk_proto = out.File
	file_fission_v1_cdk_proto_goTypes = nil
	file_fission_v1_cdk_proto_depIdxs = nil
}
